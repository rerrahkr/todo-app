services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_URI=${VITE_BACKEND_URI}
    ports:
      - "8081:${FRONTEND_PORT}"
    environment:
      - VITE_BACKEND_URI=${VITE_BACKEND_URI}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      POSTGRES_URI: ${POSTGRES_URI}
      BACKEND_PORT: ${BACKEND_PORT}
      FRONTEND_URI: ${FRONTEND_URI}
    depends_on:
      database:
        condition: service_healthy
    # restart: always
    volumes:
      - ./backend/log:/app/log

  database:
    image: postgres:16.4-bullseye
    volumes:
      - db:/var/lib/postgresql/data
      - ./database/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 3s

volumes:
  db:
